
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}
model User {
  id Int @id @default(autoincrement())

  username String @unique
  password String 
  email String @unique
  bio String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tweets Tweet[]
  likes Like[]
  responses Response[]
}

model Tweet {
  id Int @id @default(autoincrement())

  tweet String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  userId Int 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  likes Like[]
  responses Response[]
}

model Like {
  @@id(name: "id", [userId, tweetId])

  createdAt DateTime @default(now())
  
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  tweetId Int 
  tweet Tweet @relation(fields:[tweetId], references:[id], onDelete: Cascade)
}

model Response {
  id Int @id @default(autoincrement())

  response String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  tweetId Int 
  tweet Tweet @relation(fields:[tweetId], references:[id], onDelete: Cascade)
}